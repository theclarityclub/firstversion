rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Allow anyone to create their own challenge participant document using their email as ID
    match /challenge_participants/{email} {
      allow read: if true;
      allow create: if request.resource.data.email == email;
      allow update: if request.resource.data.email == email;
    }
    
    // Allow authenticated users to read and write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /progress/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /rewards/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /memberships/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow authenticated users to track their lesson progress
    match /userLessons/{docId} {
      allow read: if request.auth != null && docId.matches(request.auth.uid + '_.*');
      allow create, update: if request.auth != null && 
                             request.resource.data.userId == request.auth.uid &&
                             docId == request.resource.data.userId + '_' + request.resource.data.lessonId;
      allow delete: if false; // Cannot delete lesson completion records
    }
    
    // Allow authenticated users to read events
    match /events/{eventId} {
      allow read: if request.auth != null;
      allow write: if false; // Only admins can create/modify events
    }
    
    // Allow authenticated users to join events
    match /eventParticipants/{participantId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update, delete: if false; // Cannot modify or delete event participation
    }
  }
}
